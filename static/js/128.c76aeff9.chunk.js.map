{"version":3,"file":"static/js/128.c76aeff9.chunk.js","mappings":"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","sources":["components/contacts/contactForm.styled.js","components/contacts/contact.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/contacts/contactList.jsx","components/contacts/contactForm.jsx","components/contacts/filter.jsx","pages/contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormEl = styled.form`\n  padding: ${p => p.theme.space[4]}px;\n  display: grid;\n  gap: 10px;\n  border: ${p => p.theme.borders.medium};\n  border-color: ${p => p.theme.colors.text};\n`;\n\nexport const LabelEl = styled.label`\n  display: grid;\n  gap: ${p => p.theme.space[3]}px;\n  flex-direction: column;\n  max-width: 200px;\n  font-size: ${p => p.theme.fontSizes.md};\n`;\n\nexport const LabelFilterEl = styled.label`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ButtonEl = styled.button`\n  width: 100px;\n  margin-left: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.theadBgColor};\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.blue};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonEl } from './contactForm.styled';\nimport { Box } from 'constans';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contact = ({ contactInfo: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      {name}: {number}\n      <ButtonEl onClick={() => dispatch(deleteContact(id))}>Delete</ButtonEl>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  contactInfo: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilterValue = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filters) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters.value.toLowerCase())\n    );\n  }\n);\n","import { Contact } from './contact';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <Contact contactInfo={contact} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport { FormEl, LabelEl, ButtonEl } from './contactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = evt => {\n    const name = evt.target.name;\n    switch (name) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n\n      case 'number':\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contactName = evt.target.name.value;\n    const contactNumber = evt.target.number.value;\n    const contact = {\n      name: contactName,\n      number: contactNumber,\n    };\n    const checkName = contacts.find(el => el.name === contact.name);\n    !checkName\n      ? dispatch(addContact(contact))\n      : alert(` ${checkName.name} is already in contacts `);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <LabelEl>\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelEl>\n      <LabelEl>\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelEl>\n\n      <ButtonEl type=\"submit\">Add contact</ButtonEl>\n    </FormEl>\n  );\n};\n","import { LabelFilterEl } from './contactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <LabelFilterEl>\n      Find contacts by name\n      <input\n        onChange={evt => dispatch(setFilter(evt.currentTarget.value))}\n        type=\"text\"\n      />\n    </LabelFilterEl>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/contacts/contactList';\nimport { ContactForm } from 'components/contacts/contactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Filter } from 'components/contacts/filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n\n      <ContactList />\n    </>\n  );\n}\n"],"names":["FormEl","styled","p","theme","space","borders","medium","colors","text","LabelEl","fontSizes","md","LabelFilterEl","ButtonEl","blue","accent","radii","normal","theadBgColor","Contact","contactInfo","name","number","id","dispatch","useDispatch","display","justifyContent","onClick","deleteContact","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","filters","contact","toLowerCase","includes","ContactList","visibleContacts","useSelector","ContactForm","useState","setName","setNumber","handleChange","evt","target","reset","onSubmit","preventDefault","checkName","el","alert","addContact","onChange","type","pattern","title","required","Filter","setFilter","currentTarget","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}